# -*- coding: utf-8 -*-
"""LVADSUSR67_Aishwarya_lab2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PQKrvboBHzHSWenOOBNa1m3bofWjbA6s
"""

import pandas as pd
import numpy as np

data=pd.read_csv('/content/booking.csv')
df=pd.DataFrame(data)
df

#2.5
#1
df.describe()

df.info()

#2.5
#1
#Checking for null values
df.isnull().sum()

#2.5
#1
#Checking for duplicate values
df.duplicated().sum()

df.head()

df.corr()

import seaborn as sns
sns.heatmap(df.corr(),annot=True)

#2.5
#2
#Encoding Categorical Data
from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
df['room type']=le.fit_transform(df['room type'])
df['type of meal']=le.fit_transform(df['type of meal'])
df['Booking_ID']=le.fit_transform(df['Booking_ID'])
df['market segment type']=le.fit_transform(df['market segment type'])
df['booking status']=le.fit_transform(df['booking status'])
df['date of reservation']=le.fit_transform(df['date of reservation'])

df.head()

#2.5
#3
#Feature Selection
x=df.iloc[:,:-1]
y=df.iloc[:,-1]


#2.5
#4,5
#Data Splitting,Classification
from sklearn import tree
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test= train_test_split(x, y, test_size= 0.3, random_state=420)
a=tree.DecisionTreeClassifier()
a=a.fit(x_train,y_train)
out = a.predict(x_test)

#2.5
#6
#Accuracy
from sklearn.metrics import accuracy_score
acc=accuracy_score(out,y_test)
print("Accuracy:", acc)

#2.5
#6
#Mean Squared Error and Root Mean Square Error
from sklearn.metrics import mean_squared_error, r2_score
mse = mean_squared_error(y_test,out)
print("Mean Squared Error :",mse)
srt=np.sqrt(mse)
print("Root Mean Square Error:",srt)

#Accuracy,Precision,Recall,F1 score,Confusion Matrix
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix

accuracy = accuracy_score(y_test, out)
print("Accuracy:",accuracy)
precision = precision_score(y_test, out)
print("Precision:",precision)
recall = recall_score(y_test,out)
print("Recall:",recall)

f1 = f1_score(y_test, out)
print("F1 Score:",f1)

conf_matrix = confusion_matrix(y_test, out)
print(conf_matrix)